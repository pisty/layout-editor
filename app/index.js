{"1":function(depth0,helpers,partials,data) {
    return "                                <div class=\"draggable p-2 my-1 gray-500\" data-draggable=\"item\">"
    + this.escapeExpression(this.lambda(depth0, depth0))
    + "</div>\n";
},"3":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=this.escapeExpression, alias2=helpers.helperMissing, alias3="function";

  return "                                <li class=\"nav-item\">\n                                    <a class=\"nav-link "
    + alias1(this.lambda(((stack1 = (depth0 != null ? depth0.layouts : depth0)) != null ? stack1.active : stack1), depth0))
    + "\" href=\"#layout"
    + alias1(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(depth0,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" role=\"tab\" data-toggle=\"tab\">layout"
    + alias1(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(depth0,{"name":"index","hash":{},"data":data}) : helper)))
    + "</a>\n                                </li>\n";
},"5":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=this.escapeExpression, alias2=helpers.helperMissing;

  return "                                <div role=\"tabpanel\" class=\"tab-pane fade in "
    + alias1(this.lambda(((stack1 = (depth0 != null ? depth0.layouts : depth0)) != null ? stack1.active : stack1), depth0))
    + "\" id=\"layout"
    + alias1(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(depth0,{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\n"
    + ((stack1 = (helpers.list || (depth0 && depth0.list) || alias2).call(depth0,(depth0 != null ? depth0.rows : depth0),{"name":"list","hash":{},"fn":this.program(6, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "                                </div>\n";
},"6":function(depth0,helpers,partials,data) {
    var stack1;

  return "                                        <div class=\"row py-15\">\n"
    + ((stack1 = (helpers.list || (depth0 && depth0.list) || helpers.helperMissing).call(depth0,(depth0 != null ? depth0.cols : depth0),{"name":"list","hash":{},"fn":this.program(7, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "                                        </div>\n";
},"7":function(depth0,helpers,partials,data) {
    return "                                                <div class=\"col-"
    + this.escapeExpression(this.lambda(depth0, depth0))
    + "\">\n                                                    <div class=\"dropzone p-3 gray-400\" data-draggable=\"target\">asdsa</div>\n                                                </div>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, helper, options, alias1=helpers.helperMissing, buffer = 
  "<!doctype html>\n<html lang=\"en\">\n<head>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\"\n          integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n    <link href=\"https://fonts.googleapis.com/css?family=Open+Sans\" rel=\"stylesheet\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans';\n        }\n        .gray-100 {\n            background-color: #f8f9fa;\n        }\n\n        .gray-200 {\n            background-color: #e9ecef;\n        }\n\n        .gray-300 {\n            background-color: #dee2e6;\n        }\n\n        .gray-400 {\n            background-color: #ced4da;\n        }\n\n        .gray-500 {\n            background-color: #adb5bd;\n        }\n\n        .draggable {\n            cursor: move;\n        }\n\n        .dropzone {\n            min-height: 13vh;\n        }\n\n        .py-15 {\n            padding-bottom: 15px;\n            padding-top: 15px;\n        }\n    </style>\n</head>\n<body>\n    <setion class=\"p-4\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-2\">\n                    <aside class=\"gray-300\">\n                        <div class=\"modules p-3 list-unstyled m-0\" data-draggable=\"target\">\n";
  stack1 = ((helper = (helper = helpers.modules || (depth0 != null ? depth0.modules : depth0)) != null ? helper : alias1),(options={"name":"modules","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data}),(typeof helper === "function" ? helper.call(depth0,options) : helper));
  if (!helpers.modules) { stack1 = helpers.blockHelperMissing.call(depth0,stack1,options)}
  if (stack1 != null) { buffer += stack1; }
  return buffer + "                        </div>\n                    </aside>\n                </div>\n                <div class=\"col-10\">\n                    <main class=\"p-3 gray-300\">\n                        <div class=\"container-fluid\">\n                            <ul class=\"nav nav-pills p-2 bg-white\" role=\"tablist\">\n"
    + ((stack1 = (helpers.list || (depth0 && depth0.list) || alias1).call(depth0,(depth0 != null ? depth0.layouts : depth0),{"name":"list","hash":{},"fn":this.program(3, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "                            </ul>\n\n                            <div class=\"tab-content\">\n"
    + ((stack1 = (helpers.list || (depth0 && depth0.list) || alias1).call(depth0,(depth0 != null ? depth0.layouts : depth0),{"name":"list","hash":{},"fn":this.program(5, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "                            </div>\n                        </div>\n                    </main>\n                </div>\n            </div>\n        </div>\n    </setion>\n    <script src=\"https://code.jquery.com/jquery-3.2.1.min.js\"\n            integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\"\n            crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js\"\n            integrity=\"sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4\"\n            crossorigin=\"anonymous\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js\"\n            integrity=\"sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1\"\n            crossorigin=\"anonymous\"></script>\n\n    <script>\n        (function()\n        {\n\n            //exclude older browsers by the features we need them to support\n            //and legacy opera explicitly so we don't waste time on a dead browser\n            if\n            (\n                !document.querySelectorAll\n                ||\n                !('draggable' in document.createElement('span'))\n                ||\n                window.opera\n            )\n            { return; }\n\n            //get the collection of draggable items and add their draggable attribute\n            for(var\n                    items = document.querySelectorAll('[data-draggable=\"item\"]'),\n                    len = items.length,\n                    i = 0; i < len; i ++)\n            {\n                items[i].setAttribute('draggable', 'true');\n            }\n\n            //variable for storing the dragging item reference\n            //this will avoid the need to define any transfer data\n            //which means that the elements don't need to have IDs\n            var item = null;\n\n            //dragstart event to initiate mouse dragging\n            document.addEventListener('dragstart', function(e)\n            {\n                //set the item reference to this element\n                item = e.target;\n\n                //we don't need the transfer data, but we have to define something\n                //otherwise the drop action won't work at all in firefox\n                //most browsers support the proper mime-type syntax, eg. \"text/plain\"\n                //but we have to use this incorrect syntax for the benefit of IE10+\n                e.dataTransfer.setData('text', '');\n\n            }, false);\n\n            //dragover event to allow the drag by preventing its default\n            //ie. the default action of an element is not to allow dragging\n            document.addEventListener('dragover', function(e)\n            {\n                if(item)\n                {\n                    e.preventDefault();\n                }\n\n            }, false);\n\n            //drop event to allow the element to be dropped into valid targets\n            document.addEventListener('drop', function(e)\n            {\n                //if this element is a drop target, move the item here\n                //then prevent default to allow the action (same as dragover)\n                if(e.target.getAttribute('data-draggable') == 'target')\n                {\n                    e.target.appendChild(item);\n\n                    e.preventDefault();\n                }\n\n            }, false);\n\n            //dragend event to clean-up after drop or abort\n            //which fires whether or not the drop target was valid\n            document.addEventListener('dragend', function(e)\n            {\n                item = null;\n\n            }, false);\n\n        })();\n    </script>\n</body>\n</html>\n";
},"useData":true}